# This is a basic workflow to help you get started with Actions

name: rsd-src-generator

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
   push:
     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout Repository
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v3

      # Setup CMake
      - name: Get Cmake
        uses: lukka/get-cmake@arm64-win-linux

      # Setup Python
      - name: Setup Python
        uses: actions/setup-python@v4.3.1

#       # Setup Java
#       - name: Setup Java JDK
#         uses: actions/setup-java@v3.9.0
#         with:
#           distribution: 'adopt'
#           java-version: '17'

# Resource: https://lukasjoswiak.com/github-actions-protobuf/
      - name: Cache protobuf library
        id: cache-protobuf
        uses: actions/cache@v3.1.0-beta.3
        with:
          path: protobuf
          key: ${{ runner.os }}-protobuf
      - name: Build protobuf library and clone googleapi proto types
        if: steps.cache-protobuf.outputs.cache-hit != 'true'
        run: |
              git clone https://github.com/protocolbuffers/protobuf.git
              cd protobuf
              git submodule update --init --recursive
              mkdir build
              cmake -S . -B build -Dprotobuf_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE=Release
              cmake --build ./build --parallel 20

      - name: Install protobuf library
        run: |
              git clone https://github.com/googleapis/api-common-protos.git
              cd ./protobuf/build && sudo make -j20 install
              sudo ldconfig
              protoc --version
              ls -al
             

      - name: Build & Install for Python
        run: |
              protoc --version
              cd protobuf/python
              sudo python setup.py build
              sudo python setup.py install              

      # Generate for python
      - name: Generate python source code
        run: |
              ls -al
              mkdir -p protobuf-rsd-gen/py-src
              protoc --proto_path=${{github.workspace}} -I=${{github.workspace}}/api-common-protos -I=${{github.workspace}} --python_out=protobuf-rsd-gen/py-src ${{github.workspace}}/*.proto


      # Generate for Java using protobuf java-lite
      - name: Generate java source code
        run: |
              mkdir -p protobuf-rsd-gen/java-src
              ls -al
              protoc --proto_path=${{github.workspace}} -I=${{github.workspace}}/api-common-protos --java_out=protobuf-rsd-gen/java-src rss_client.proto
      # Upload artifacts
      - name: Upload generated artifacts
        uses: actions/upload-artifact@v3.1.1
        with:
          name: rsd-java-src
          path: |
                ${{github.workspace}}/protobuf-rsd-gen/java-src
       # Upload artifacts
      - name: Upload generated artifacts
        uses: actions/upload-artifact@v3.1.1
        with:
          name: rsd-python-gen
          path: |
                ${{github.workspace}}/protobuf-rsd-gen/py-src
